apply plugin: 'maven-publish'

if (!project.hasProperty('libVersionNumber')) {
    ext.libVersionNumber = ''
}

ext {
    getStandardisedVersionNumber = this.&getStandardisedVersionNumber
}

task validateVersionNumber {
    doFirst {

        if (!project.hasProperty('libMajorVersion')) {
            throw new Exception("libMajorVersion not defined")
        }

        if (!project.hasProperty('libMinorVersion')) {
            throw new Exception("libMinorVersion not defined")
        }

        def (major, minor, patch) = getStandardisedVersionNumber().tokenize('.')
        if (major != libMajorVersion) {
            throw new Exception("Invalid Version number. Major version incorrect: ${major}")
        } else if (!minor.isInteger()) {
            throw new Exception("Invalid Version number. Minor version incorrect. ${minor}")
        }
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

def getStandardisedVersionNumber() {
    return libVersionNumber?.replace('v', '')
}

tasks.withType(PublishToMavenRepository) { task ->
    dependsOn("validateVersionNumber")
}
project.afterEvaluate {

    publishing {

        publications {
            release(MavenPublication) {

                artifact sourceJar

                from components.release

                groupId = libGroupid
                artifactId = libArtifactid
                version = getStandardisedVersionNumber()
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri(libGithubpackagesUrl)
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}

